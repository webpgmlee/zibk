/**
 *
 */
package or.kr.kbiz.bo.login.service.impl;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Service;

import or.kr.kbiz.bo.login.domain.LoginUserDomain;
import or.kr.kbiz.bo.login.service.LoginUserService;
import or.kr.kbiz.serv.spring.mvc.BaseDao;
import or.kr.kbiz.serv.util.SecureUtil;

/**
 * 로그인 서비스 구현체
 *
 * @author hyeok
 * @since 2018.01.09
 * @version 1.0
 */
@Service
public class LoginUserServiceImpl implements LoginUserService {

//	private static final Logger LOG = LoggerFactory.getLogger(LoginUserServiceImpl.class);

	@Autowired(required=true)
	@Qualifier("apBaseDao")
	BaseDao apBaseDao;

	@Override
	public LoginUserDomain execLogin(LoginUserDomain loginUserDomain, HttpServletRequest request) {
		LoginUserDomain compDomain = (LoginUserDomain) apBaseDao.getObject("loginUser.selectLoginUserInfo", loginUserDomain.getUserId());
		LoginUserDomain result = new LoginUserDomain();

		/* 사용자 존재여부 */
		if (compDomain != null) {
			/* 사용자 계정 잠금 여부 */
			if ("Y".equals(compDomain.getAcctLockedYn())) {
				result.setResultCode("11");
				result.setResultMsg("최종 로그인 후 3개월이 초과하여 계정이 잠겼습니다.\n관리자에게 문의하세요.");
				return result;
			}

			/* 사용자 비밀번호 관리자에의해 초기화 여부 */
			if ("Y".equals(compDomain.getInitPswdYn())) {
				result.setResultCode("12");
				result.setResultMsg("관리자에의하여 비밀번호가 초기화 되었습니다.\n비밀번호를 초기화 후 로그인하세요.");
				return result;
			}

			/* 사용자 비밀번호 변경 3개월 초과 여부 */
			if ("Y".equals(compDomain.getPswdChngYn())) {
				result.setResultCode("13");
				result.setResultMsg("비밀번호 변경 후 3개월이 지났습니다.\n비밀번호를 변경해주세요.");
				return result;
			}

			/* 사용자 로그인 시도 5회 초과 여부 */
			if (compDomain.getLognAtmpCont() >= 5) {
				result.setResultCode("14");
				result.setResultMsg("비밀번호를 5회 잘못 입력하였습니다.\n관리자에게 비밀번호 초기화 요청 후 사용하세요.");
				return result;
			}

			/* 로그인 성공 */
			if (SecureUtil.encrypt(loginUserDomain.getPswd()).equals(compDomain.getPswd())) {
				result.setResultCode("01");
				result.setResultMsg("로그인에 성공하였습니다.");
				apBaseDao.update("loginUser.updateSuccessLogin", loginUserDomain.getUserId());

				/* 세션 설정 */
				HttpSession session = request.getSession();
				session.setAttribute("id", compDomain.getUserId());
				session.setAttribute("name", compDomain.getUserNm());
				session.setAttribute("callApGrade", compDomain.getCallApGrade());
				if (loginUserDomain.getCtiDevice() != null && !"".equals(loginUserDomain.getCtiDevice().trim())) {
					session.setAttribute("ctiDevice", loginUserDomain.getCtiDevice());
				}
				session.setMaxInactiveInterval(32400);
			} else {
				/* 로그인 실패 */
				result.setResultCode("02");
				result.setResultMsg("비밀번호가 틀립니다.");
				apBaseDao.update("loginUser.updateFailLogin", loginUserDomain.getUserId());
			}
		} else {
			result.setResultCode("51");
			result.setResultMsg("사용자가 존재하지 않습니다.");
		}

		return result;
	}

	@SuppressWarnings("unchecked")
	public LoginUserDomain execChngPswd(LoginUserDomain loginUserDomain) {
		LoginUserDomain compDomain = (LoginUserDomain) apBaseDao.getObject("loginUser.selectLoginUserInfo", loginUserDomain.getChngUserId());
		LoginUserDomain result = new LoginUserDomain();

		/* 사용자 존재여부 */
		if (compDomain != null) {
			/* 사용자 계정 잠금 여부 */
			if ("Y".equals(compDomain.getAcctLockedYn())) {
				result.setResultCode("11");
				result.setResultMsg("최종 로그인 후 3개월이 초과하여 계정이 잠겼습니다.\n관리자에게 문의하세요.");
				return result;
			}

			/* 사용자 로그인 시도 5회 초과 여부 */
			if (compDomain.getLognAtmpCont() >= 5) {
				result.setResultCode("14");
				result.setResultMsg("비밀번호를 5회 잘못 입력하였습니다.\n관리자에게 비밀번호 초기화 요청 후 사용하세요.");
				return result;
			}

			/* 기존 비밀번호 확인 성공 */
			if (SecureUtil.encrypt(loginUserDomain.getChngPswd()).equals(compDomain.getPswd())) {
				/* 최근 사용한 3건의 비밀번호 동일여부 확인 */
				List<LoginUserDomain> resultList = apBaseDao.getList("loginUser.selectThUserPswdByUser", loginUserDomain.getChngUserId());
				if (resultList != null) {
					for (int i = 0; i < resultList.size(); i++) {
						LoginUserDomain t = resultList.get(i);
						if (i < 3) {
							if (SecureUtil.encrypt(loginUserDomain.getChngNewPswd()).equals(t.getPswd())) {
								result.setResultCode("31");
								result.setResultMsg("최근 사용한 비밀번호와 동일합니다.\n최근 3회동안 사용하지 않은 비밀번호로 변경하세요.");
								return result;
							}
							if (i == 2) {
								/* 최근 사용한 비밀번호 변경 이력이 3건이라면 첫 번째 1건 삭제 */
								apBaseDao.delete("loginUser.deleteThUserPswdByMinChngDate", loginUserDomain.getChngUserId());
							}
						} else {
							/* 최근 사용한 비밀번호 변경 이력이 3건을 초과할 경우 해당 이력 삭제
							 * 관리자가 비밀번호 초기화한 경우 제외 비밀번호 이력은 최대 3건만 저장 유지 */
							apBaseDao.delete("loginUser.deleteThUserPswdByMinChngDate", loginUserDomain.getChngUserId());
						}
					}
				}

				/* 사용자 이전 비밀번호 미사용 처리 */
				apBaseDao.update("loginUser.updateNotUsePrePswd", loginUserDomain.getChngUserId());
				/* 사용자 변경 비밀번호 저장 */
				loginUserDomain.setChngNewPswd(SecureUtil.encrypt(loginUserDomain.getChngNewPswd()));
				apBaseDao.insert("loginUser.insertThUserPswd", loginUserDomain);
				loginUserDomain.setChngNewPswd("");
				/* 비밀번호 초기화 데이터 삭제 */
				apBaseDao.delete("loginUser.deleteThUserPswdByInitPswd", loginUserDomain.getChngUserId());

				result.setResultCode("01");
				result.setResultMsg("정상적으로 비밀번호를 변경하였습니다.\n변경된 비밀번호로 다시 로그인해주세요.");
			} else {
				/* 기존 비밀번호 확인 실패 */
				result.setResultCode("02");
				result.setResultMsg("기존 비밀번호가 틀립니다.");
				apBaseDao.update("loginUser.updateFailLogin", loginUserDomain.getUserId());
			}
		} else {
			result.setResultCode("51");
			result.setResultMsg("사용자가 존재하지 않습니다.");
		}

		return result;
	}
}
